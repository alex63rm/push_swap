• Debes entregar un Makefile. Ese Makefile deberá compilar el proyecto utilizando
las reglas habituales. Solo recompilará el programa en caso de ser necesario.

• Si eres inteligente, utilizarás tu librería para este proyecto, haciendo entrega de la
carpeta libft (Makefile incluído) en la raíz del repositorio. El Makefile de tu
push_swap deberá compilar la librería, y luego tu proyecto.

• Las variables globales están prohibidas.

• Tu proyecto debe escribirse en C cumpliendo la Norma

- write
- read
- malloc
- free
- exit


V.3. El programa: “push_swap”

• Debes escribir un programa llamado push_swap que recibirá como argumento el
stack a con el formato de una lista de enteros. El primer argumento debe ser el que
esté encima del stack (cuidado con el orden).

• El programa debe mostrar la lista de instrucciones (más corta posible) para ordenar
el stack a, de menor a mayor donde el menor se sitúe en la cima del stack.

• Las instrucciones deben separarse utilizando un “\n” y nada más.

• El objetivo es ordenar el stack con el mínimo número de operaciones posible. Duran-
te la evaluación compararemos el número de instrucciones obtenido por tu programa
con un rango de instrucciones máximo.

• Tu programa no recibirá puntos tanto si tu programa muestra una lista demasiado
larga como si el resultado no es correcto.

• Si no se especifican parámetros, el programa no deberá mostrar nada y deberá
devolver el control al usuario.

• En caso de error, deberás mostrar Error seguido de un “\n” en la salida de erro-
res estándar. Algunos de los posibles errores son: argumentos que no son enteros,
argumentos superiores a un int, y/o encontrar números duplicados